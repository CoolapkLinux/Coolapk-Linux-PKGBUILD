
name: update
on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  update:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Update PKGBUILDs
        run: |
            for pkg in `ls pkgbuild`
            do
              cd ~/work/coal-pkgbuilds/coal-pkgbuilds/pkgbuild/${pkg}/
              if [ -f no-update ];then
                echo "ignore update of ${pkg}"
              elif [ -f ./aur ];then
                if [ `grep -c "localpkgver=" aur` -ne '0' ];then
                  export `cat aur | grep "localpkgver"`
                else
                  localpkgver="aha!"
                fi
                if [ -f update.sh ];then
                  aurpkgver=$(bash update.sh)
                else
                  aurpkgver=$(curl "https://aur.archlinux.org/rpc/?v=5&type=info&arg[]=${pkg}" | jq -r '.results|.[]|.Version')
                fi
                if [${localpkgver} != ${aurpkgver}];then
                  (sed -i '/localpkgver=${localpkgver}/d' ./aur) 1>/dev/null
                  echo "localpkgver=${aurpkgver}" >> ./aur
                  echo ${pkg} >> ../../need-update
                fi
              elif [ -f ./PKGBUILD ];then
                source PKGBUILD
                if [ -f update.sh ];then
                  pkgonlinever=$(bash update.sh)
                elif [ `grep -c "source=(\"https://github.com/" PKGBUILD` -ne '0' ];then              
                  pkgonlinever=$(curl $(echo $_url|sed -e 's/github.com/api.github.com\/repos/' -e 's/$/\/releases\/latest/') | jq -r '.tag_name')
                else
                  echo "can't update ${pkg};uncertain PKGBUILD"
                fi
                if [ "${pkgver}" != "${pkgonlinever}" ];then
                  sed -i "s/${pkgver}/${pkgonlinever}/g" pkgbuild/${pkg}/PKGBUILD
                  echo ${pkg} >> need-update
                else
                  echo "${pkg} is latest"
                fi
              fi
            done
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
